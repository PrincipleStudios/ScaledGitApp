openapi: 3.0.2
info:
  title: ScaledGitApp API
  version: 1.0.0
  description: ScaledGitApp API

paths:
  /api/env:
    summary: Gets the public API environment data
    get:
      operationId: getInfo
      summary: Gets the public API environment data
      responses:
        200:
          description:
            Contains public environment info that is still useful for developers
            when debugging issues
          content:
            application/json:
              schema:
                type: object
                required:
                  - gitHash
                  - tag
                properties:
                  gitHash:
                    description: Git commit hash
                    type: string
                  tag:
                    description: Build tag id
                    type: string
  /api/locales:
    summary: Gets translations based on a language
    get:
      operationId: getTranslationData
      summary: Gets translations based on a language
      parameters:
        - name: lng
          schema: { type: string }
          required: true
          in: query
        - name: ns
          schema: { type: string }
          required: true
          in: query
      responses:
        200:
          description: An i18next compatible json document containing the translation data
          content:
            application/json:
              schema:
                type: object
                # each additional property at this level is a language
                additionalProperties:
                  type: object
                  # each additional property at this level is a namespace
                  additionalProperties: { type: object, format: any }
  /api/git/fetch:
    post:
      x-dotnet-mvc-server-controller: GitFetch
      operationId: requestGitFetch
      summary: Request that the git clone is immediately refreshed
      responses:
        200:
          description: The git repo was refreshed successfully
        500:
          description: An unknown error occurred
  /api/git/upstreams:
    get:
      x-dotnet-mvc-server-controller: GitUpstreamData
      operationId: getUpstreamData
      summary: Gets the upstream data for all branches
      responses:
        200:
          description: Upstream branch configuration data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpstreamBranches'
  /api/git/branch-details:
    post:
      x-dotnet-mvc-server-controller: GitBranchDetails
      operationId: getBranchDetails
      summary: Gets the upstream data for a specific branch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branches:
                  type: array
                  items: { type: string }
                includeDownstream:
                  type: boolean
                includeUpstream:
                  type: boolean
                recurse:
                  type: boolean
                limit:
                  type: integer
              required:
                - branches
                - includeDownstream
                - includeUpstream
                - recurse
      responses:
        200:
          description: Upstream branch configuration data
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/BranchDetails' }
components:
  schemas:
    UpstreamBranches:
      type: array
      items:
        $ref: '#/components/schemas/BranchConfiguration'
    BranchConfiguration:
      type: object
      required:
        - name
        - color
        - upstream
        - downstream
      properties:
        name: { type: string }
        color: { type: string }
        upstream: { $ref: '#/components/schemas/BranchList' }
        downstream:
          type: array
          items: { type: string }
    BranchDetails:
      type: object
      required:
        - name
        - color
        - exists
        - nonMergeCommitCount
        - upstream
        - downstream
      properties:
        name: { type: string }
        color: { type: string }
        exists: { type: boolean }
        nonMergeCommitCount: { type: integer }
        upstream:
          type: array
          items: { $ref: '#/components/schemas/DetailedUpstreamBranch' }
        downstream:
          type: array
          items: { type: string }
    BranchList:
      type: array
      items: { $ref: '#/components/schemas/Branch' }
    Branch:
      type: object
      required: [name]
      properties:
        name:
          type: string
    DetailedUpstreamBranch:
      type: object
      required:
        - name
        - color
        - exists
        - behindCount
        - hasConflict
      properties:
        name: { type: string }
        color: { type: string }
        exists: { type: boolean }
        behindCount: { type: integer }
        hasConflict: { type: boolean }
