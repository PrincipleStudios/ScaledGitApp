<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <IncludeAzure Condition=" '$(IncludeAzure)' == '' AND '$(Configuration)' == 'Debug' ">true</IncludeAzure>
    <IncludeAWS Condition=" '$(IncludeAWS)' == '' AND '$(Configuration)' == 'Debug' ">true</IncludeAWS>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="branching-strategy.yaml" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="branching-strategy.yaml" />
  </ItemGroup>


  <ItemGroup>
    <PackageReference Include="AspNet.Security.OAuth.GitHub" Version="8.0.0" />
    <PackageReference Include="dotenv.net" Version="3.1.3" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication.MicrosoftAccount" Version="8.0.3" />
    <PackageReference Include="Microsoft.PowerShell.SDK" Version="7.4.1" />
    <PackageReference Include="OpenTelemetry" Version="1.8.0" />
    <PackageReference Include="OpenTelemetry.Exporter.OpenTelemetryProtocol" Version="1.8.0" />
    <PackageReference Include="OpenTelemetry.Extensions.Hosting" Version="1.8.0" />
    <PackageReference Include="OpenTelemetry.Instrumentation.AspNetCore" Version="1.8.1" />
    <PackageReference Include="OpenTelemetry.Instrumentation.Runtime" Version="1.8.0" />
    <PackageReference Include="PrincipleStudios.OpenApiCodegen.Json.Extensions" Version="0.15.0" />
    <PackageReference Include="PrincipleStudios.OpenApiCodegen.Server.Mvc" Version="0.15.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="8.0.0" />
    <PackageReference Include="SharpYaml" Version="2.1.1" />
  </ItemGroup>

  <!-- Debug Dependencies -->
  <ItemGroup Condition=" '$(Configuration)' == 'Debug' ">
    <PackageReference Include="PrincipleStudios.ViteDevelopmentServer" Version="0.1.0" />
  </ItemGroup>

  <!-- Azure-specific dependencies -->
  <ItemGroup Condition=" '$(IncludeAzure)' == 'true' ">
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Blobs" Version="1.3.3" />
    <PackageReference Include="Azure.Extensions.AspNetCore.DataProtection.Keys" Version="1.2.3" />
    <PackageReference Include="Azure.Identity" Version="1.11.0" />
    <PackageReference Include="Microsoft.Azure.SignalR" Version="1.25.1" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(IncludeAzure)' == 'true' ">
    <DefineConstants>$(DefineConstants);IncludeAzure</DefineConstants>
  </PropertyGroup>

  <!-- AWS-specific dependencies -->
  <ItemGroup Condition=" '$(IncludeAWS)' == 'true' ">
    <PackageReference Include="Amazon.AspNetCore.DataProtection.SSM" Version="3.1.1" />
    <PackageReference Include="AWSSDK.Extensions.NETCore.Setup" Version="3.7.7" />
    <PackageReference Include="AWSSDK.SimpleSystemsManagement" Version="3.7.200.43" />
    <PackageReference Include="PrincipleStudios.Extensions.Configuration.SecretsManager" Version="0.5.1" />
  </ItemGroup>
  <PropertyGroup Condition=" '$(IncludeAWS)' == 'true' ">
    <DefineConstants>$(DefineConstants);IncludeAWS</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <OpenApiSchemaMvcServer Include="..\schemas\api.yaml" Link="Api\api.yaml" />
    <Watch Include=".env" />
    <Watch Include="../.env" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="$(SolutionRoot)ui/Ui.esproj" Condition="Exists('$(SolutionRoot)ui/Ui.esproj')" />
  </ItemGroup>

  <Target Name="SetupDockerCompose" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' ">
  <!-- Starts up jaeger for OpenTelemetry records if Docker is running -->
    <Exec Command="docker ps" ContinueOnError="true" EchoOff="true" StandardOutputImportance="low" StandardErrorImportance="low">
      <Output TaskParameter="ExitCode" PropertyName="IsDockerRunning" />
    </Exec>
    <Message Condition="'$(IsDockerRunning)' != '0'" Text="The docker runtime was not started." />
    <Exec WorkingDirectory="$(SolutionRoot)/eng/jaeger" Command="docker-compose up -d" ContinueOnError="true" Condition="'$(IsDockerRunning)' == '0'" />
  </Target>

</Project>
